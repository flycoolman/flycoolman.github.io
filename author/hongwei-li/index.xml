<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hongwei Li | flycoolman</title>
    <link>/author/hongwei-li/</link>
      <atom:link href="/author/hongwei-li/index.xml" rel="self" type="application/rss+xml" />
    <description>Hongwei Li</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>©2020 flycoolman.com All Rights Reserved</copyright><lastBuildDate>Wed, 05 Aug 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu42a5118afc49636e6fda7ce5d4b48056_3366_512x512_fill_lanczos_center_2.png</url>
      <title>Hongwei Li</title>
      <link>/author/hongwei-li/</link>
    </image>
    
    <item>
      <title>Set Up MySQL Cluster</title>
      <link>/linux/set-up-mysql-master-slave-cluster/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      <guid>/linux/set-up-mysql-master-slave-cluster/</guid>
      <description>&lt;p&gt;This document preassumes that you are familiar with VirtualBox, Vagrant on Linux.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;VirtualBox&lt;/li&gt;
&lt;li&gt;Vagrant&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-to-build&#34;&gt;What to Build&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;3 Virtual Machines&lt;/li&gt;
&lt;li&gt;3 MySQL instances running on the 3 VMs&lt;/li&gt;
&lt;li&gt;Employees Sample Database&lt;/li&gt;
&lt;li&gt;Data replication&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ip-settings&#34;&gt;IP Settings&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Master  - 192.168.0.201&lt;/li&gt;
&lt;li&gt;Slave-1 - 192.168.0.202&lt;/li&gt;
&lt;li&gt;Slave-2 - 192.168.0.203&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vagrantfiles&#34;&gt;Vagrantfiles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;./Vagrantfile-master&#34;&gt;Vagrantfile-Master&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;./Vagrantfile-slave-1&#34;&gt;Vagrantfile-Slave-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;./Vagrantfile-slave-2&#34;&gt;Vagrantfile-Slave-2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;steps&#34;&gt;Steps&lt;/h2&gt;
&lt;h3 id=&#34;boot-up-virtual-machines&#34;&gt;Boot up Virtual Machines&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Use &amp;lsquo;vagrant up&amp;rsquo; to boot up 3 virtual machines.&lt;/li&gt;
&lt;li&gt;Use &amp;lsquo;vagrant halt&amp;rsquo; to power off the VMs&lt;/li&gt;
&lt;li&gt;Open VirtualBox GUI and change the MAC addresses of the 3 VMs&lt;br&gt;
Make sure the 3 VMs have different MAC addresses&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;install-mysql-server&#34;&gt;Install MySQL Server&lt;/h3&gt;
&lt;p&gt;Install MySQL server on the 3 VMs separately.&lt;br&gt;
The guide 
&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-centos-8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How To Install MySQL on CentOS 8&lt;/a&gt; can be referenced.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo dnf install mysql-server
sudo systemctl start mysqld.service
sudo systemctl status mysqld
sudo systemctl enable mysqld
sudo mysql_secure_installation
mysqladmin -u root -p version
mysql -u root -p
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;configure-mysql-server-on-master-vm&#34;&gt;Configure MySQL Server on Master VM&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Edit MySQL configuration file &amp;lsquo;/etc/my.cnf&amp;rsquo;. Add the below configuration.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;[mysqld]&lt;br&gt;
log-bin=mysql-bin # Optinal&lt;br&gt;
server-id=1　　　　# Must&lt;/p&gt;
&lt;p&gt;bind-address = 0.0.0.0 # Must&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;./config-master.png&#34; alt=&#34;config-master&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Restart MySQL server service&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;System command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo systemctl restart mysqld
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Create user for syncing data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MySQL commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE USER &#39;repl&#39;@&#39;192.168.0.%&#39; IDENTIFIED BY &#39;123456&#39;;  
GRANT REPLICATION SLAVE ON *.* TO &#39;repl&#39;@&#39;192.168.0.%&#39;;  
FLUSH PRIVILEGES;  
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Check master status&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;./master-status.png&#34; alt=&#34;master-status&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;configure-mysql-server-on-slave-vm&#34;&gt;Configure MySQL Server on Slave VM&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Edit MySQL configuration file &amp;lsquo;/etc/my.cnf&amp;rsquo;. Add the below configuration.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;[mysqld]&lt;br&gt;
server-id=2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;./config-slave-1.png&#34; alt=&#34;config-slave-1&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Restart MySQL server service&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;System command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo systemctl restart mysqld
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Configure syncronization&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MySQL command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;change master to master_host=&#39;192.168.0.201&#39;, master_user=&#39;repl&#39;, master_password=&#39;123456&#39;, master_log_file=&#39;mysql-bin.000001&#39;, master_log_pos=155;

start slave;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./sync-config-slave-1.png&#34; alt=&#34;sync-config-slave-1&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check slave status&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both &lt;strong&gt;Slave_IO_Running&lt;/strong&gt; and &lt;strong&gt;Slave_SQL_Running&lt;/strong&gt; should be &amp;lsquo;&lt;strong&gt;Yes&lt;/strong&gt;&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./slave-1-status.png&#34; alt=&#34;slave-1-status&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Same configuration and steps on Slave-2 VM, except the &lt;strong&gt;server-id=3&lt;/strong&gt;.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;import-the-employees-sample-database&#34;&gt;Import the &amp;lsquo;Employees Sample Database&amp;rsquo;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Sync folder&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Note that when you vagrant ssh into your machine, you&amp;rsquo;re in /home/vagrant. /home/vagrant is a different directory from the synced /vagrant directory.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;./sync-folder.png&#34; alt=&#34;sync-folder&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    By default, Vagrant only syncs the folders on &lt;strong&gt;vagrant up&lt;/strong&gt; or &lt;strong&gt;vagrant reload&lt;/strong&gt;.&lt;br&gt;
The tool &lt;strong&gt;rsync&lt;/strong&gt; can be used for data syncronization.
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Download the &amp;lsquo;Employees Sample Database&amp;rsquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Download the zip file from 
&lt;a href=&#34;https://github.com/datacharmer/test_db&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Employees DB on GitHub&lt;/a&gt;, unzip the file and put the unzipped folder into the master VM folder of the host machine.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./database-folder.png&#34; alt=&#34;database-folder&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reload the master VM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here we use the simple way, just reload the master VM.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Import the database&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On master VM:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd test_db-master/
mysql -u root -p -t &amp;lt; employees.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./import-result.png&#34; alt=&#34;import-result&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Validating the Employee Data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;time mysql -u root -p -t &amp;lt; test_employees_sha.sql&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./validating-result.png&#34; alt=&#34;validating-result&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check data on slaves&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now you can see all the data has been replicated on the slave servers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./data-synced-1.png&#34; alt=&#34;data-synced-1&#34;&gt;
&lt;img src=&#34;./data-synced-2.png&#34; alt=&#34;data-synced-2&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;errors&#34;&gt;Errors&lt;/h3&gt;
&lt;h4 id=&#34;slave_io_running-no&#34;&gt;Slave_IO_Running: No&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./Slave_IO_Running-error.png&#34; alt=&#34;Slave_IO_Running-error&#34;&gt;&lt;/p&gt;
&lt;p&gt;Possible reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Forget to restart mysqld service&lt;/li&gt;
&lt;li&gt;Forget to bind address.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Solution:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Restart mysqld service&lt;/li&gt;
&lt;li&gt;Use netstat to check the status, i.e.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;./Slave_IO_Running-solution.png&#34; alt=&#34;Slave_IO_Running-solution&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;links&#34;&gt;Links&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.vagrantup.com/intro/getting-started/synced_folders&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Synced Folders&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-centos-8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How To Install MySQL on CentOS 8&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://dev.mysql.com/doc/employee/en/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Employees Sample Database&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://www.cnblogs.com/cjsblog/p/9706370.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MySQL Cluster COnfiguration&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://stackoverflow.com/questions/17666249/how-do-i-import-an-sql-file-using-the-command-line-in-mysql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How To Import SQL File&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h4 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Build A Free Website In Minutes - Part 5</title>
      <link>/post/build-a-free-website-in-minutes-part-5/</link>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate>
      <guid>/post/build-a-free-website-in-minutes-part-5/</guid>
      <description>&lt;p&gt;The website has been up and running for a while. Today I want to update a document on another machine. The steps below describe how to set up the environment on the machine.&lt;/p&gt;
&lt;h2 id=&#34;steps&#34;&gt;Steps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Install Hugo Extended version&lt;/li&gt;
&lt;li&gt;Gitclone the repository&lt;/li&gt;
&lt;li&gt;Delete the &amp;lsquo;public&amp;rsquo; folder&lt;/li&gt;
&lt;li&gt;Update the submodule&lt;/li&gt;
&lt;li&gt;Checkout the branch &amp;lsquo;master&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Work on the document&lt;/li&gt;
&lt;li&gt;Add, Commit and Push as before&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;step-1-install-hugo-extended-version&#34;&gt;Step 1: Install Hugo Extended version&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;wget https://github.com/gohugoio/hugo/releases/download/v0.74.3/hugo_extended_0.74.3_Linux-64bit.deb

sudo apt install ./hugo_extended_0.74.3_Linux-64bit.deb 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-2-gitclone-the-repository&#34;&gt;Step 2: Gitclone the repository&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/flycoolman/academic-kickstart.git
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-3-delete-the-public-folder&#34;&gt;Step 3: Delete the &amp;lsquo;public&amp;rsquo; folder&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd academic-kickstart/
rm -rf public
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-4-update-the-submodule&#34;&gt;Step 4: Update the submodule&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-5-checkout-the-branch-master&#34;&gt;Step 5: Checkout the branch &amp;lsquo;master&amp;rsquo;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd public
git checkout master
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-6-work-on-the-document&#34;&gt;Step 6: Work on the document&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;blahblahblah...
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-7-build-the-website&#34;&gt;Step 7: Build the website&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd academic-kickstart/
hugo
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-8-add-commit-and-push-as-before&#34;&gt;Step 8: Add, Commit and Push as before&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd public
git add .
git commit -m &amp;quot;blahblah...&amp;quot;
git push

cd ..
git add .
git commit -m &amp;quot;blahblah...&amp;quot;
git push
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ALL SET!&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;errors-and-tricks&#34;&gt;Errors and Tricks&lt;/h2&gt;
&lt;h3 id=&#34;error-1-unable-to-locate-template-for-shortcode&#34;&gt;Error 1: Unable to locate template for shortcode&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;hongwei@HP840G1:~/Documents/academic-kickstart$ hugo server&lt;br&gt;
Building sites … ERROR 2020/08/04 07:51:50 Unable to locate template for shortcode &amp;ldquo;fragment&amp;rdquo; in page &amp;ldquo;slides/example/index.md&amp;rdquo;&lt;br&gt;
ERROR 2020/08/04 07:51:50 Unable to locate template for shortcode &amp;ldquo;alert&amp;rdquo; in page &amp;ldquo;talk/example/index.md&amp;rdquo;&lt;br&gt;
ERROR 2020/08/04 07:51:50 Unable to locate template for shortcode &amp;ldquo;alert&amp;rdquo; in page &amp;ldquo;publication/preprint/index.md&amp;rdquo;&lt;br&gt;
ERROR 2020/08/04 07:51:50 Unable to locate template for shortcode &amp;ldquo;alert&amp;rdquo; in page &amp;ldquo;post/build-a-free-website-in-minutes-part-1/index.md&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;br&gt;
Install Hugo Extended version.&lt;/p&gt;
&lt;h3 id=&#34;error-2-failed-to-extract-shortcode&#34;&gt;Error 2: failed to extract shortcode&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;hongwei@HP840G1:~/Documents/academic-kickstart$ hugo server&lt;br&gt;
Built in 11 ms&lt;br&gt;
Error: Error building site: &amp;ldquo;/home/hongwei/Documents/academic-kickstart/content/home/demo.md:61:1&amp;rdquo;: failed to extract shortcode: template for shortcode &amp;ldquo;alert&amp;rdquo; not found&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;br&gt;
If the Hugo Extended version has been installed, update the git submodule, see &lt;strong&gt;Step 4&lt;/strong&gt; above.&lt;/p&gt;
&lt;h3 id=&#34;error-3-public-already-exists&#34;&gt;Error 3: &amp;lsquo;public&amp;rsquo; already exists&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;hongwei@HP840G1:~/Documents/academic-kickstart$ git submodule update &amp;ndash;init &amp;ndash;recursive&lt;br&gt;
Submodule &amp;lsquo;public&amp;rsquo; (&lt;a href=&#34;https://github.com/flycoolman/flycoolman.github.io.git&#34;&gt;https://github.com/flycoolman/flycoolman.github.io.git&lt;/a&gt;) registered for path &amp;lsquo;public&amp;rsquo;&lt;br&gt;
Submodule &amp;lsquo;themes/academic&amp;rsquo; (&lt;a href=&#34;https://github.com/gcushen/hugo-academic.git&#34;&gt;https://github.com/gcushen/hugo-academic.git&lt;/a&gt;) registered for path &amp;lsquo;themes/academic&amp;rsquo;&lt;br&gt;
fatal: destination path &amp;lsquo;/home/hongwei/Documents/academic-kickstart/public&amp;rsquo; already exists and is not an empty directory.&lt;br&gt;
fatal: clone of &amp;lsquo;&lt;a href=&#34;https://github.com/flycoolman/flycoolman.github.io.git&#39;&#34;&gt;https://github.com/flycoolman/flycoolman.github.io.git&#39;&lt;/a&gt; into submodule path &amp;lsquo;/home/hongwei/Documents/academic-kickstart/public&amp;rsquo; failed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;br&gt;
Delete the &amp;lsquo;public&amp;rsquo; folder, and update the git submodule again.&lt;/p&gt;
&lt;h3 id=&#34;error-4-forgot-to-check-out-before-working-on-document&#34;&gt;Error 4: forgot to check out before working on document&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;hongwei@HP840G1:~/Documents/academic-kickstart/public$ git status&lt;br&gt;
HEAD detached from f82be3e&lt;br&gt;
nothing to commit, working tree clean&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;hongwei@HP840G1:~/Documents/academic-kickstart/public$ git push&lt;br&gt;
fatal: You are not currently on a branch.&lt;br&gt;
To push the history leading to the current (detached HEAD)&lt;br&gt;
state now, use&lt;/p&gt;
&lt;p&gt;git push origin HEAD:&lt;name-of-remote-branch&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;hongwei@HP840G1:~/Documents/academic-kickstart/public$ git branch&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(HEAD detached from f82be3e)&lt;br&gt;
master&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;hongwei@HP840G1:~/Documents/academic-kickstart/public$ git checkout master&lt;br&gt;
Warning: you are leaving 1 commit behind, not connected to&lt;br&gt;
any of your branches:&lt;/p&gt;
&lt;p&gt;1090675 revise Upgrade to VirtualBox 6.1 and Vagrant 2.9.9 on Ubuntu 18.04&lt;/p&gt;
&lt;p&gt;If you want to keep it by creating a new branch, this may be a good time&lt;br&gt;
to do so with:&lt;/p&gt;
&lt;p&gt;git branch &lt;new-branch-name&gt; 1090675&lt;/p&gt;
&lt;p&gt;Switched to branch &amp;lsquo;master&amp;rsquo;&lt;br&gt;
Your branch is up to date with &amp;lsquo;origin/master&amp;rsquo;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git branch temp 1090675
git push --set-upstream origin temp
git checkout temp
git push
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Merge the branch &lt;strong&gt;temp&lt;/strong&gt; to &lt;strong&gt;master&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout master 
git pull

git branch --merged
git branch -vv
git branch -d temp
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;h4 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Inversion of Control and Dependency Injection</title>
      <link>/coding/java/ioc-di/</link>
      <pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate>
      <guid>/coding/java/ioc-di/</guid>
      <description>&lt;h3 id=&#34;inversion-of-control-ioc&#34;&gt;Inversion of Control (IoC)&lt;/h3&gt;
&lt;p&gt;A real system might have dozens of services and components. To make a loosely coupled application, the way is to plug in the plugins (components and services) at some point.
So the core problem is how to assemble the plugins into an application. Then frameworks aim to resolve the problem. Usually &lt;strong&gt;Inversion of Control&lt;/strong&gt; is used in frameworks, so does Spring Framework. That&amp;rsquo;s why Inversion of Control (IoC) is the core technology of Spring Framework.&lt;/p&gt;
&lt;h4 id=&#34;inversion-of-control-ioc-vs-traditional-control&#34;&gt;Inversion of Control (IoC) vs. Traditional Control&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Traditional Control&lt;br&gt;
In traditional programming, the custom code that expresses the purpose of the program calls into reusable libraries to take care of generic tasks.&lt;br&gt;
I.e.&lt;br&gt;
the custom object instantiates its dependent objects, then uses the objects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inversion of Control (IoC)&lt;br&gt;
IoC inverts the flow of control as compared to traditional control flow. In IoC, custom-written portions of a computer program receive the flow of control from a generic framework.
Usually it is the framework that calls into the custom, or task-specific, code.&lt;br&gt;
I.e.&lt;br&gt;
the custom object receives the instantiated dependent objects from framework.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;what-can-ioc-serve&#34;&gt;What Can IoC Serve&lt;/h4&gt;
&lt;p&gt;IoC as a design guideline, is used to increase modularity of the program and make it extensible. It serves the following purposes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To decouple the execution of a task from implementation.&lt;/li&gt;
&lt;li&gt;To make every module focus on what it is designed for.&lt;/li&gt;
&lt;li&gt;To free modules from assumptions about how and what other systems do, and instead rely on contracts.&lt;/li&gt;
&lt;li&gt;To prevent side effects on other modules when replacing a module.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;spring-implementation-of-ioc-principle&#34;&gt;Spring Implementation of IoC Principle&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;IoC&lt;/strong&gt; is also known as &lt;strong&gt;dependency injection (DI)&lt;/strong&gt;. It is a process whereby objects define their dependencies (that is, the other objects they work with) only through constructor arguments, arguments to a factory method, or properties that are set on the object instance after it is constructed or returned from a factory method. The container then injects those dependencies when it creates the bean. This process is fundamentally the inverse (hence the name, Inversion of Control) of the bean itself controlling the instantiation or location of its dependencies by using direct construction of classes or a mechanism such as the Service Locator pattern.&lt;/p&gt;
&lt;p&gt;This is common characteristic of frameworks, IoC manages java objects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;from instantiation to destruction through its BeanFactory.&lt;/li&gt;
&lt;li&gt;Java components that are instantiated by the IoC container are called beans, and the IoC container manages a bean&amp;rsquo;s scope, lifecycle events, and any AOP features for which it has been configured and coded.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    In Spring framework, the IoC Container does that job of injecting dependancies (DI) and not us, The flow of control is reversed, (Framework to Application) it is IoC with DI.
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;h3 id=&#34;spring-ioc-container&#34;&gt;Spring IoC Container&lt;/h3&gt;
&lt;p&gt;Central to the Spring Framework is its inversion of control (IoC) container, which provides a consistent means of configuring and managing Java objects using reflection. The container is responsible for managing object lifecycles of specific objects: creating these objects, calling their initialization methods, and configuring these objects by wiring them together.&lt;/p&gt;
&lt;p&gt;The interface &lt;strong&gt;org.springframework.context.ApplicationContext&lt;/strong&gt; represents the Spring IoC container and is responsible for &lt;strong&gt;instantiating&lt;/strong&gt;, &lt;strong&gt;configuring&lt;/strong&gt;, and &lt;strong&gt;assembling&lt;/strong&gt; the aforementioned beans. The container gets its instructions on what objects to instantiate, configure, and assemble by reading &lt;strong&gt;configuration metadata&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;ul&gt;
&lt;li&gt;Representation - org.springframework.context.ApplicationContext&lt;/li&gt;
&lt;li&gt;Responsibilities - instantiating, configuring, and assembling Beans&lt;/li&gt;
&lt;li&gt;Tool: configuration metadata&lt;/li&gt;
&lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h4 id=&#34;types-of-ioc-containers&#34;&gt;Types of IoC Containers&lt;/h4&gt;
&lt;p&gt;The &lt;strong&gt;org.springframework.beans&lt;/strong&gt; and &lt;strong&gt;org.springframework.context&lt;/strong&gt; packages provide the basis for the Spring Framework’s IoC container.&lt;br&gt;
The &lt;strong&gt;BeanFactory interface&lt;/strong&gt; provides an advanced configuration mechanism capable of managing objects of any nature.&lt;br&gt;
The &lt;strong&gt;ApplicationContext interface&lt;/strong&gt; builds on top of the BeanFactory (it is a sub-interface) and adds other functionality such as easier integration with Spring’s AOP features, message resource handling (for use in internationalization), event propagation, and application-layer specific contexts such as the WebApplicationContext for use in web applications.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;BeanFactory container&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The BeanFactory is the actual representation of the Spring IoC container that is responsible for containing and otherwise managing the aforementioned beans.&lt;/li&gt;
&lt;li&gt;The BeanFactory interface is the central IoC container interface in Spring. The BeanFactory API provides the underlying basis for Spring’s IoC functionality.&lt;/li&gt;
&lt;li&gt;Its specific contracts are mostly used in integration with other parts of Spring and related third-party frameworks.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ApplicationContext container&lt;br&gt;
Because an ApplicationContext includes all the functionality of a BeanFactory, it is generally recommended over a plain BeanFactory, except for scenarios where full control over bean processing is needed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;ul&gt;
&lt;li&gt;In short, the BeanFactory provides the configuration framework and basic functionality, and the ApplicationContext adds more enterprise-specific functionality. The ApplicationContext is a complete superset of the BeanFactory.&lt;/li&gt;
&lt;li&gt;You should use an ApplicationContext unless you have a good reason for not doing so, with GenericApplicationContext and its subclass AnnotationConfigApplicationContext as the common implementations for custom bootstrapping.&lt;/li&gt;
&lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;h3 id=&#34;dependency-injection-di&#34;&gt;Dependency Injection (DI)&lt;/h3&gt;
&lt;p&gt;Inversion of Control is too generic a term, and thus people find it confusing. As a result with a lot of discussion with various IoC advocates, the name was settled on &lt;strong&gt;Dependency Injection&lt;/strong&gt;.&lt;br&gt;
Dependency injection generally means passing a dependent object as a parameter to a method, rather than having the method create the dependent object.
What it means in practice is that the method does not have a direct dependency on a particular implementation; any implementation that meets the requirements can be passed as a parameter.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    The Spring IoC Container is the leading dependency injection framework.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h4 id=&#34;dependency-lookup-vs-dependency-injection&#34;&gt;Dependency Lookup vs. Dependency Injection&lt;/h4&gt;
&lt;p&gt;Objects can be obtained by means of either dependency lookup or dependency injection.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dependency lookup is a pattern where a caller asks the container object for an object with a specific name or of a specific type.&lt;/li&gt;
&lt;li&gt;Dependency injection is a pattern where the container passes objects by name to other objects, via either constructors, properties, or factory methods.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;the-styles-of-di&#34;&gt;The Styles of DI&lt;/h4&gt;
&lt;p&gt;Dependency Injection can be done by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Constructor-based dependency injection&lt;br&gt;
Constructor-based DI is accomplished by the container invoking a constructor with a number of arguments, each representing a dependency.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  public class SimpleMovieLister {

      // the SimpleMovieLister has a dependency on a MovieFinder
      private MovieFinder movieFinder;

      // a constructor so that the Spring container can inject a MovieFinder
      public SimpleMovieLister(MovieFinder movieFinder) {
          this.movieFinder = movieFinder;
      }

      // business logic that actually uses the injected MovieFinder is omitted...
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Setter-based dependency injection&lt;br&gt;
Setter-based DI is accomplished by the container calling setter methods on your beans after invoking a no-argument constructor or a no-argument static factory method to instantiate your bean.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  public class SimpleMovieLister {

      // the SimpleMovieLister has a dependency on the MovieFinder
      private MovieFinder movieFinder;

      // a setter method so that the Spring container can inject a MovieFinder
      public void setMovieFinder(MovieFinder movieFinder) {
          this.movieFinder = movieFinder;
      }

      // business logic that actually uses the injected MovieFinder is omitted...
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;constructor-based-or-setter-based-di&#34;&gt;Constructor-based or Setter-based DI&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Constructor-based and setter-based DI can be mixed&lt;/li&gt;
&lt;li&gt;Constructors for mandatory dependencies and setter methods or configuration methods for optional dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Why&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Constructor injection lets you implement application components as immutable objects and ensures that required dependencies are not null. Furthermore, constructor-injected components are always returned to the client (calling) code in a fully initialized state.&lt;/li&gt;
&lt;li&gt;Setter injection should primarily only be used for optional dependencies that can be assigned reasonable default values within the class. Otherwise, not-null checks must be performed everywhere the code uses the dependency. One benefit of setter injection is that setter methods make objects of that class amenable to reconfiguration or re-injection later.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Use the DI style that makes the most sense for a particular class.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;ioc-vs-di&#34;&gt;IoC vs. DI&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Interchangable&lt;br&gt;
IoC and DI are used interchangeably.&lt;/li&gt;
&lt;li&gt;Process and Result&lt;br&gt;
IoC is achieved through DI. DI is the process of providing the dependencies and IoC is the end result of DI.&lt;/li&gt;
&lt;li&gt;One to Many&lt;br&gt;
DI is a specific type of IoC and is not the only way to achieve IoC. There are other ways as well, such as:
&lt;ul&gt;
&lt;li&gt;Service Locator pattern&lt;/li&gt;
&lt;li&gt;Template method design pattern&lt;/li&gt;
&lt;li&gt;Strategy design pattern&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;ul&gt;
&lt;li&gt;IoC basically facilitates having different components designed and coded separately and later used together by defining their relation with DI.&lt;/li&gt;
&lt;li&gt;By DI, the responsibility of creating objects is shifted from our application code to the Spring container; this phenomenon is called IoC.&lt;/li&gt;
&lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;h3 id=&#34;links&#34;&gt;Links&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#beans-introduction&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The IoC Container&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://martinfowler.com/articles/injection.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Inversion of Control Containers and the Dependency Injection pattern&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://en.wikipedia.org/wiki/Spring_Framework#Inversion_of_control_container_.28dependency_injection.29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring Framework&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://stackoverflow.com/questions/9403155/what-is-dependency-injection-and-inversion-of-control-in-spring-framework&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;What is Dependency Injection and Inversion of Control in Spring Framework?&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://howtodoinjava.com/spring-core/spring-ioc-vs-di/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring – Inversion of Control vs Dependency Injection&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://howtodoinjava.com/spring-core/different-spring-ioc-containers/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring – IoC Containers&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://en.wikipedia.org/wiki/Inversion_of_control#Implementation_techniques&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Inversion of control&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://stackoverflow.com/questions/9403155/what-is-dependency-injection-and-inversion-of-control-in-spring-framework&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;What is Dependency Injection and Inversion of Control in Spring Framework?&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/BeanFactory.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Interface BeanFactory&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/ApplicationContext.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Interface ApplicationContext&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#beans-beanfactory&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The BeanFactory&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>IETF Datatracker Environment Setup</title>
      <link>/coding/python/ietf-datatracker-environment-setup/</link>
      <pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/coding/python/ietf-datatracker-environment-setup/</guid>
      <description>&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Linux host machine (i.e. Ubuntu 18.04)&lt;/li&gt;
&lt;li&gt;Vagrant (i.e. 2.9.9)&lt;/li&gt;
&lt;li&gt;VirtualBox (i.e. 6.1.12)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    The version numbers are just for my environment.&lt;br&gt;
Find the original log of my setup &lt;a href=&#34;./ietf_datatracker_env_setup.txt&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;
&lt;p&gt;The steps are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use Vagrant to boot up a VM&lt;/li&gt;
&lt;li&gt;Install GUI on the VM&lt;/li&gt;
&lt;li&gt;Install Docker on the VM&lt;/li&gt;
&lt;li&gt;Install SVN&lt;/li&gt;
&lt;li&gt;Check out the branch&lt;/li&gt;
&lt;li&gt;Set up database&lt;/li&gt;
&lt;li&gt;Set up virtual environment&lt;/li&gt;
&lt;li&gt;Run the tests&lt;/li&gt;
&lt;li&gt;Start the Development Server&lt;/li&gt;
&lt;li&gt;Mailserver and Rsync Data&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;step-1-use-vagrant-to-boot-up-a-vm&#34;&gt;Step 1: Use Vagrant to boot up a VM&lt;/h3&gt;
&lt;p&gt;Put the below Vagrantfile into working directory and execute &amp;lsquo;Vagrant up&amp;rsquo;.

&lt;a href=&#34;./Vagrantfile&#34;&gt;Vagrantfile&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;step-2-install-gui-on-the-vm&#34;&gt;Step 2: Install GUI on the VM&lt;/h3&gt;
&lt;p&gt;Ssh to the VM,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vagrant ssh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then use the below commands to intall GUI on the VM.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo yum -y groupinstall &amp;quot;GNOME Desktop&amp;quot;
echo &amp;quot;exec gnome-session&amp;quot; &amp;gt;&amp;gt; ~/.xinitrc
systemctl set-default graphical.target
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;startx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;in VirtualBox console to start the GUI.&lt;/p&gt;
&lt;h3 id=&#34;step-3-install-docker-on-the-vm&#34;&gt;Step 3: Install Docker on the VM&lt;/h3&gt;
&lt;p&gt;Install docker and start the service.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo yum -y install docker
sudo systemctl status docker
sudo systemctl start docker
sudo systemctl enable docker
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Create user group &amp;lsquo;docker&amp;rsquo; and add you into the group.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo groupadd docker
sudo usermod -aG docker $(whoami)
sudo usermod -aG docker vagrant
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Reevaluate the group and restart the docker service.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;logout
sudo systemctl restart docker
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check if you can run docker commands without sudo.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker info
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-4-install-svn&#34;&gt;Step 4: Install SVN&lt;/h3&gt;
&lt;p&gt;Add the repository and install SVN.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vim /etc/yum.repos.d/wandisco-svn.repo
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;[WandiscoSVN]
name=Wandisco SVN Repo
baseurl=http://opensource.wandisco.com/centos/$releasever/svn-1.8/RPMS/$basearch/
enabled=1
gpgcheck=0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;sudo yum remove subversion*
sudo yum clean all
sudo yum install subversion

svn --version
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-5-check-out-the-branch&#34;&gt;Step 5: Check out the branch&lt;/h3&gt;
&lt;p&gt;UTF-8 settings:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export LC_ALL=C
sudo vi .bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add below to the file ~/.bashrc&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LANG=en_US.UTF-8
export LANG&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Change SELinux settings, so that docker image can access your home directory.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chcon -Rt svirt_sandbox_file_t /home/vagrant/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Checkout the branch&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir -p ietf
cd ietf
svn co https://svn.tools.ietf.org/svn/tools/ietfdb/personal/flycoolman/7.10.1.dev0
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-6-set-up-database&#34;&gt;Step 6: Set up database&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd 7.10.1.dev0/
./docker/setupdb
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-7-set-up-virtual-environment&#34;&gt;Step 7: Set up virtual environment&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;./docker/run
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    rsyslog error can be ignored!&lt;br&gt;
[FAIL] rsyslogd is not running &amp;hellip; failed!
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;In virtual environment of the container&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip install --upgrade -r requirements.txt

./ietf/manage.py migrate
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;The below operation might be needed if the migration fails.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo cp docker/settings_local.py ietf/  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run the migrate command again.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;step-8-run-the-tests&#34;&gt;Step 8: Run the tests&lt;/h3&gt;
&lt;p&gt;In the virtual environment to run the tests:&lt;/p&gt;
&lt;p&gt;./ietf/manage.py test &amp;ndash;settings=settings_sqlitetest&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Make sure that one of the following commands runs to completion without errors.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;step-9-start-the-development-server&#34;&gt;Step 9: Start the Development Server&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;./ietf/manage.py runserver 0.0.0.0:8000 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Test the access to datatracker.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./featured.png&#34; alt=&#34;ietf-datatracker&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;step-10-mailserver-and-rsync-data&#34;&gt;Step 10: Mailserver and Rsync Data&lt;/h3&gt;
&lt;p&gt;Go to 
&lt;a href=&#34;https://trac.tools.ietf.org/tools/ietfdb/wiki/SprintCoderSetup&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the original page&lt;/a&gt; for details about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://trac.tools.ietf.org/tools/ietfdb/wiki/SprintCoderSetup&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;(Optional) Run the mailserver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://trac.tools.ietf.org/tools/ietfdb/wiki/SprintCoderSetup&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Manually Edit or rsync Datatracker Data Directories&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;setup-complete&#34;&gt;Setup Complete&lt;/h3&gt;
&lt;p&gt;For other workflow things, please refer to 
&lt;a href=&#34;https://trac.tools.ietf.org/tools/ietfdb/wiki/SprintCoderSetup&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the original setup guide.&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;links&#34;&gt;Links&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-centos-7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How To Install and Use Docker on CentOS 7&lt;/a&gt;

&lt;a href=&#34;https://www.digitalocean.com/community/questions/how-to-fix-docker-got-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to fix docker: Got permission denied while trying to connect to the Docker daemon socket&lt;/a&gt;

&lt;a href=&#34;https://tecadmin.net/install-subversion-1-8-on-centos-rhel/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to Install Subversion (SVN) 1.8.19 on CentOS/RHEL 7/6/5&lt;/a&gt;

&lt;a href=&#34;https://trac.tools.ietf.org/tools/ietfdb/wiki/SprintCoderSetup&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sprint Coder Setup&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://www.techrepublic.com/article/how-to-install-a-gui-on-top-of-centos-7/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to install a GUI on top of CentOS 7&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://trac.tools.ietf.org/tools/ietfdb/wiki/SprintCoderSetupTroubleshooting&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SprintCoderSetupTroubleshooting&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://flycoolman.com/linux/ubuntu-18.04-upgrade-virtualbox-vagrant/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Upgrade to VirtualBox 6.1 and Vagrant 2.9.9 on Ubuntu 18.04&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h4 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Spring Beans</title>
      <link>/coding/java/spring-beans/</link>
      <pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/coding/java/spring-beans/</guid>
      <description>&lt;h3 id=&#34;spring-beans&#34;&gt;Spring Beans&lt;/h3&gt;
&lt;br&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;strong&gt;The objects that are managed by Spring IoC container&lt;/strong&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;The objects that form the backbone of your application and that are managed by the &lt;strong&gt;Spring IoC container&lt;/strong&gt; are called beans. A bean is an object that is instantiated, assembled, and otherwise managed by a Spring IoC container. These beans are created with the &lt;strong&gt;configuration metadata&lt;/strong&gt; that you supply to the container, for example, in the form of XML &lt;bean/&gt; definitions.&lt;/p&gt;
&lt;p&gt;In Spring, the objects that form the backbone of your application and that are managed by the Spring IoC container are called beans. A bean is an object that is instantiated, assembled, and otherwise managed by a Spring IoC container. Otherwise, a bean is simply one of many objects in your application. Beans, and the dependencies among them, are reflected in the configuration metadata used by a container.&lt;/p&gt;
&lt;p&gt;Spring Bean is nothing special, any object in the Spring framework that we initialize through Spring container is called Spring Bean. Any normal Java POJO class can be a Spring Bean if it’s configured to be initialized via container by providing configuration metadata information.&lt;/p&gt;
&lt;h3 id=&#34;spring-ioc-container&#34;&gt;Spring IoC Container&lt;/h3&gt;
&lt;br&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;ul&gt;
&lt;li&gt;Representation - org.springframework.context.ApplicationContext&lt;/li&gt;
&lt;li&gt;Responsibilities - instantiating, configuring, and assembling Beans&lt;/li&gt;
&lt;li&gt;Tool: configuration metadata&lt;/li&gt;
&lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;The interface org.springframework.context.ApplicationContext represents the Spring IoC container and is responsible for instantiating, configuring, and assembling the aforementioned beans. The container gets its instructions on what objects to instantiate, configure, and assemble by reading configuration metadata.&lt;/p&gt;
&lt;h3 id=&#34;configuration-metadata&#34;&gt;Configuration Metadata&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;This configuration metadata represents how you as an application developer tell the Spring container to instantiate, configure, and assemble the objects in your application.&lt;/li&gt;
&lt;li&gt;The configuration metadata is represented in &lt;strong&gt;XML&lt;/strong&gt;, &lt;strong&gt;Java annotations&lt;/strong&gt;, or &lt;strong&gt;Java code&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;It allows you to express the objects that compose your application and the rich interdependencies between such objects.&lt;/li&gt;
&lt;li&gt;Spring configuration consists of at least one and typically more than one bean definition that the container must manage.&lt;/li&gt;
&lt;li&gt;Consumed by Spring IoC container&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;spring-bean-scopes&#34;&gt;Spring Bean Scopes&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;7 scopes (Spring 4.2.x) are supported out of the box. You can also create a custom scope.&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Singleton&lt;/strong&gt; – Only one instance of the bean will be created for each container. This is the default scope for the spring beans. While using this scope, make sure bean doesn’t have shared instance variables otherwise it might lead to data inconsistency issues.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prototype&lt;/strong&gt; – A new instance will be created every time the bean is requested.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Request&lt;/strong&gt; – This is same as prototype scope, however it’s meant to be used for web applications. A new instance of the bean will be created for each HTTP request.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Session&lt;/strong&gt; – A new bean will be created for each HTTP session by the container.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Global-session&lt;/strong&gt; – This is used to create global session beans for Portlet applications.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Application&lt;/strong&gt; - Scopes a single bean definition to the lifecycle of a ServletContext. Only valid in the context of a web-aware Spring ApplicationContext.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Websocket&lt;/strong&gt; - Scopes a single bean definition to the lifecycle of a WebSocket. Only valid in the context of a web-aware Spring ApplicationContext.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    As of Spring 3.0, a thread scope is available, but is not registered by default.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;ul&gt;
&lt;li&gt;As a rule, use the prototype scope for all stateful beans and the singleton scope for stateless beans.&lt;/li&gt;
&lt;li&gt;The client code must clean up prototype-scoped objects and release expensive resources that the prototype bean(s) are holding.&lt;/li&gt;
&lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;5 of the above are available only if you use a &lt;strong&gt;web-aware ApplicationContext&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;request&lt;/li&gt;
&lt;li&gt;session&lt;/li&gt;
&lt;li&gt;globalSession&lt;/li&gt;
&lt;li&gt;application&lt;/li&gt;
&lt;li&gt;websocket&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;spring-singleton-vs-singleton-pattern&#34;&gt;Spring Singleton vs Singleton Pattern&lt;/h4&gt;
&lt;p&gt;Spring’s concept of a singleton bean differs from the &lt;strong&gt;Singleton pattern&lt;/strong&gt; as defined in the Gang of Four (GoF) patterns book. The GoF Singleton hard-codes the scope of an object such that one and only one instance of a particular class is created per ClassLoader.&lt;/p&gt;
&lt;p&gt;The scope of the &lt;strong&gt;Spring singleton&lt;/strong&gt; is best described as per container and per bean. This means that if you define one bean for a particular class in a single Spring container, then the Spring container creates one and only one instance of the class defined by that bean definition.&lt;/p&gt;
&lt;h3 id=&#34;spring-bean-lifecycle&#34;&gt;Spring Bean Lifecycle&lt;/h3&gt;
&lt;h4 id=&#34;lifecycle-overview&#34;&gt;Lifecycle Overview&lt;/h4&gt;
&lt;p&gt;The lifecycle of any object means when &amp;amp; how it is born, how it behaves throughout its life, and when &amp;amp; how it dies.
The lifecycle of Spring Beans is not different from normal beans or objects. The below picture shows the overview of the lifecycle of objects, or Spring Beans.&lt;br&gt;
&lt;img src=&#34;./lifecycle-overview.png&#34; alt=&#34;lifecycle-overview&#34;&gt;&lt;/p&gt;
&lt;p&gt;As the Spring Beans are managed by Spring IoC containers. This makes the application developers not able to control the full lifecycle of Spring Beans. But Spring provides ways to add customizations into the lifecycle of Spring Beans, such as aware interfaces and callback methods, which are added in the below picture to show the lifecycle.
&lt;img src=&#34;./lifecycle-detailed-1.png&#34; alt=&#34;lifecycle-detailed-1&#34;&gt;
&lt;img src=&#34;./lifecycle-detailed-2.png&#34; alt=&#34;lifecycle-detailed-2&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;aware-interfaces&#34;&gt;Aware Interfaces&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;BeanNameAware&lt;br&gt;
The BeanNameAware interface is implemented by beans that need access to its name defined in the Spring container.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  import org.springframework.beans.factory.BeanNameAware;

  public class BeanNameAwareImpl implements BeanNameAware {
      @Override
      public void setBeanName(String s) {
          System.out.println(&amp;quot;Bean Name: &amp;quot; + s);
      }
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BeanFactoryAware&lt;br&gt;
Beans might need access to the bean factory that created it, say to call any service from the bean factory.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  import org.springframework.beans.BeansException;
  import org.springframework.beans.factory.BeanFactory;
  import org.springframework.beans.factory.BeanFactoryAware;

  public class BeanFactoryAwareImpl implements BeanFactoryAware {

      @Override
      public void setBeanFactory(BeanFactory beanFactory) throws BeansException {
          System.out.println(beanFactory.getBean(&amp;quot;fooBean&amp;quot;));
      }
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ApplicationContextAware&lt;br&gt;
In Spring beans, you might require access to the ApplicationContext. For example, if your bean needs to look up some other beans. Similarly, if your bean needs access to some application file resource in your bean or even publish some application events, you need access to the ApplicationContext.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  import org.springframework.beans.BeansException;
  import org.springframework.context.ApplicationContext;
  import org.springframework.context.ApplicationContextAware;

  public class ApplicationContextAwareImpl implements ApplicationContextAware {

      @Override
      public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
          FooBean userBean = (FooBean) applicationContext.getBean(&amp;quot;fooBean&amp;quot;);
          System.out.println(&amp;quot;User Id: &amp;quot; + fooBean.getFooBeanId() + &amp;quot;  Bean Name :&amp;quot; + fooBean.getName());
      }
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more aware interfaces and details, go to the link  
&lt;a href=&#34;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/Aware.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Interface Aware&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;lifecycle-callbacks&#34;&gt;Lifecycle Callbacks&lt;/h4&gt;
&lt;h5 id=&#34;callback-methods&#34;&gt;Callback Methods&lt;/h5&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;strong&gt;InitializingBean&lt;/strong&gt; and &lt;strong&gt;DisposableBean&lt;/strong&gt; callback interfaces are not recommended.
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Initialization callbacks&lt;/strong&gt;&lt;br&gt;
3 options:
&lt;ul&gt;
&lt;li&gt;Annotation-based&lt;br&gt;
&lt;strong&gt;@PostConstruct&lt;/strong&gt; annotation or specify a POJO initialization method&lt;/li&gt;
&lt;li&gt;XML-based&lt;br&gt;
&lt;strong&gt;init-method&lt;/strong&gt; attribute to specify the name of the method that has a void no-argument signature&lt;/li&gt;
&lt;li&gt;Java Config&lt;br&gt;
initMethod attribute of &lt;strong&gt;@Bean&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Destruction callbacks&lt;/strong&gt;&lt;br&gt;
3 options:
&lt;ul&gt;
&lt;li&gt;Annotation-based&lt;br&gt;
&lt;strong&gt;@PreDestroy&lt;/strong&gt; annotation or specify a generic method that is supported by bean definitions&lt;/li&gt;
&lt;li&gt;XML-Based&lt;br&gt;
&lt;strong&gt;destroy-method&lt;/strong&gt; attribute on the &lt;strong&gt;&amp;lt;bean/&amp;gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Java Config&lt;br&gt;
&lt;strong&gt;destroyMethod&lt;/strong&gt; attribute of &lt;strong&gt;@Bean&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Startup and shutdown callbacks&lt;/strong&gt;&lt;br&gt;
The Lifecycle interface defines the essential methods for any object that has its own lifecycle requirements (e.g. starts and stops some background process)&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;callback-examples&#34;&gt;Callback Examples&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;XML-based: Custom init() and destroy() methods&lt;br&gt;
The default init and destroy methods in bean configuration file can be defined in two ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Bean local definition&lt;/strong&gt; applicable to a single bean&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Global definition&lt;/strong&gt; applicable to all beans defined in beans context&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;beans.xml&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Local definition&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;beans&amp;gt;
     
      &amp;lt;bean id=&amp;quot;demoBean&amp;quot; class=&amp;quot;com.flycoolman.callbackdemo.DemoBean&amp;quot;
                      init-method=&amp;quot;customInit&amp;quot;
                      destroy-method=&amp;quot;customDestroy&amp;quot;&amp;gt;&amp;lt;/bean&amp;gt;
     
  &amp;lt;/beans&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Global definition&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;beans default-init-method=&amp;quot;customInit&amp;quot; default-destroy-method=&amp;quot;customDestroy&amp;quot;&amp;gt;   
     
          &amp;lt;bean id=&amp;quot;demoBean&amp;quot; class=&amp;quot;com.flycoolman.callbackdemo.DemoBean&amp;quot;&amp;gt;&amp;lt;/bean&amp;gt;
     
  &amp;lt;/beans&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;DemoBean.java&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  package com.flycoolman.callbackdemo;
     
  public class DemoBean 
  {
      public void customInit() 
      {
          System.out.println(&amp;quot;Method customInit() invoked...&amp;quot;);
      }
     
      public void customDestroy() 
      {
          System.out.println(&amp;quot;Method customDestroy() invoked...&amp;quot;);
      }
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Annotation-based: @PostConstruct and @PreDestroy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;@PostConstruct annotated method will be invoked after the bean has been constructed using default constructor and just before it’s instance is returned to requesting object.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@PreDestroy annotated method is called just before the bean is about be destroyed inside bean container.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  package com.flycoolman.callbackdemo;  
         
  import javax.annotation.PostConstruct;  
  import javax.annotation.PreDestroy;  
         
  public class DemoBean  
  {
      @PostConstruct
      public void customInit() 
      {
          System.out.println(&amp;quot;Method customInit() invoked...&amp;quot;);
      }
             
      @PreDestroy
      public void customDestroy() 
      {
          System.out.println(&amp;quot;Method customDestroy() invoked...&amp;quot;);
      }
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java Config&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  public class Foo {
      public void init() {
          // initialization logic
      }
      public void cleanup() {
              // destruction logic
          }
  }

  @Configuration
  public class AppConfig {
      @Bean(initMethod = &amp;quot;init&amp;quot;, destroyMethod = &amp;quot;cleanup&amp;quot;)
      public Foo foo() {
          return new Foo();
      }
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;multiple-lifecycle-mechanismsexecution-orders&#34;&gt;Multiple Lifecycle Mechanisms/Execution Orders&lt;/h4&gt;
&lt;p&gt;Multiple lifecycle mechanisms configured for the same bean, with different initialization methods, are called as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Methods annotated with @PostConstruct&lt;/li&gt;
&lt;li&gt;afterPropertiesSet() as defined by the InitializingBean callback interface&lt;/li&gt;
&lt;li&gt;A custom configured init() method&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;Destroy methods are called in the same order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Methods annotated with &lt;strong&gt;@PreDestroy&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;destroy()&lt;/strong&gt; as defined by the DisposableBean callback interface&lt;/li&gt;
&lt;li&gt;A custom configured &lt;strong&gt;destroy()&lt;/strong&gt; method&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;what-is-callback&#34;&gt;What is Callback&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;From Wikipedia&lt;/strong&gt;&lt;br&gt;
In computer programming, a &lt;strong&gt;callback&lt;/strong&gt;, also known as a &amp;ldquo;&lt;strong&gt;call-after&lt;/strong&gt;&amp;rdquo; function, is &lt;strong&gt;any executable code that is passed as an argument to other code&lt;/strong&gt;; that other code is expected to call back (execute) the argument at a given time. This execution may be immediate as in a &lt;strong&gt;synchronous callback&lt;/strong&gt;, or it might happen at a later time as in an &lt;strong&gt;asynchronous callback&lt;/strong&gt;. Programming languages support callbacks in different ways, often implementing them with&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;subroutines,&lt;/li&gt;
&lt;li&gt;lambda expressions,&lt;/li&gt;
&lt;li&gt;blocks,&lt;/li&gt;
&lt;li&gt;or function pointers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;For Java&lt;/strong&gt;&lt;br&gt;
In object-oriented programming languages without function-valued arguments, such as in Java before its 1.7 version, callbacks can be simulated by passing an instance of an abstract class or interface, of which the receiver will call one or more methods, while the calling end provides a concrete implementation. Something like below (from Stackoverflow)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class Test {
    public static void main(String[] args) throws  Exception {
        new Test().doWork(new Callback() { // implementing class            
            @Override
            public void call() {
                System.out.println(&amp;quot;callback called&amp;quot;);
            }
        });
    }

    public void doWork(Callback callback) {
        System.out.println(&amp;quot;doing work&amp;quot;);
        callback.call();
    }

    public interface Callback {
        void call();
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;spring-bean-instantiation&#34;&gt;Spring Bean Instantiation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Instantiation with a constructor&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;bean id=&amp;quot;exampleBean&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Instantiation with a static factory method&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;bean id=&amp;quot;exampleBean&amp;quot; factory-method=&amp;quot;createInstance&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Instantiation using an instance factory method&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;bean id=&amp;quot;myFactoryBean&amp;quot;  class=&amp;quot;...&amp;quot;&amp;gt;
     
  &amp;lt;bean id=&amp;quot;exampleBean&amp;quot;  factory-bean=&amp;quot;myFactoryBean&amp;quot; factory-method=&amp;quot;createInstance&amp;quot;&amp;gt;&amp;lt;/bean&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more details, go to the link 
&lt;a href=&#34;https://docs.spring.io/spring/docs/4.2.x/spring-framework-reference/html/beans.html#beans-factory-class&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Instantiating beans&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;spring-bean-configurationcontainer-configuration&#34;&gt;Spring Bean Configuration/Container Configuration&lt;/h3&gt;
&lt;h4 id=&#34;xml-based&#34;&gt;XML-based&lt;/h4&gt;
&lt;p&gt;XML-based configuration metadata shows these beans configured as &lt;bean/&gt; elements inside a top-level &lt;beans/&gt; element.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Bean Configuration with Property&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
  &amp;lt;beans xmlns=&amp;quot;http://www.springframework.org/schema/beans&amp;quot;
      xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
      xsi:schemaLocation=&amp;quot;http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd&amp;quot;&amp;gt;

      &amp;lt;!-- services --&amp;gt;

      &amp;lt;bean id=&amp;quot;petStore&amp;quot; class=&amp;quot;org.springframework.samples.jpetstore.services.PetStoreServiceImpl&amp;quot;&amp;gt;
          &amp;lt;property name=&amp;quot;accountDao&amp;quot; ref=&amp;quot;accountDao&amp;quot;/&amp;gt;
          &amp;lt;property name=&amp;quot;itemDao&amp;quot; ref=&amp;quot;itemDao&amp;quot;/&amp;gt;
          &amp;lt;!-- additional collaborators and configuration for this bean go here --&amp;gt;
      &amp;lt;/bean&amp;gt;

      &amp;lt;!-- more bean definitions for services go here --&amp;gt;

  &amp;lt;/beans&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multiple Bean Configuration&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
  &amp;lt;beans xmlns=&amp;quot;http://www.springframework.org/schema/beans&amp;quot;
      xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
      xsi:schemaLocation=&amp;quot;http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd&amp;quot;&amp;gt;

      &amp;lt;bean id=&amp;quot;accountDao&amp;quot;
          class=&amp;quot;org.springframework.samples.jpetstore.dao.jpa.JpaAccountDao&amp;quot;&amp;gt;
          &amp;lt;!-- additional collaborators and configuration for this bean go here --&amp;gt;
      &amp;lt;/bean&amp;gt;

      &amp;lt;bean id=&amp;quot;itemDao&amp;quot; class=&amp;quot;org.springframework.samples.jpetstore.dao.jpa.JpaItemDao&amp;quot;&amp;gt;
          &amp;lt;!-- additional collaborators and configuration for this bean go here --&amp;gt;
      &amp;lt;/bean&amp;gt;

      &amp;lt;!-- more bean definitions for data access objects go here --&amp;gt;

  &amp;lt;/beans&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multiple XML Files&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;beans&amp;gt;
      &amp;lt;import resource=&amp;quot;services.xml&amp;quot;/&amp;gt;
      &amp;lt;import resource=&amp;quot;resources/messageSource.xml&amp;quot;/&amp;gt;
      &amp;lt;import resource=&amp;quot;/resources/themeSource.xml&amp;quot;/&amp;gt;

      &amp;lt;bean id=&amp;quot;bean1&amp;quot; class=&amp;quot;...&amp;quot;/&amp;gt;
      &amp;lt;bean id=&amp;quot;bean2&amp;quot; class=&amp;quot;...&amp;quot;/&amp;gt;
  &amp;lt;/beans&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;annotation-based&#34;&gt;Annotation-based&lt;/h4&gt;
&lt;p&gt;Spring 2.5 introduced support for annotation-based configuration metadata.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Annotation injection is performed before XML injection, thus the latter configuration will override the former for properties wired through both approaches.
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Implicit Registeration&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
  &amp;lt;beans xmlns=&amp;quot;http://www.springframework.org/schema/beans&amp;quot;
      xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
      xmlns:context=&amp;quot;http://www.springframework.org/schema/context&amp;quot;
      xsi:schemaLocation=&amp;quot;http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd&amp;quot;&amp;gt;

      &amp;lt;context:annotation-config/&amp;gt;

  &amp;lt;/beans&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;a href=&#34;context:annotation-config/&#34;&gt;context:annotation-config/&lt;/a&gt; only looks for annotations on beans in the same application context in which it is defined.&lt;br&gt;
This means that, if you put &lt;a href=&#34;context:annotation-config/&#34;&gt;context:annotation-config/&lt;/a&gt; in a WebApplicationContext for a DispatcherServlet, it only checks for @Autowired beans in your controllers, and not your services.
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Annotate the Method&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  public class SimpleMovieLister {

      private MovieFinder movieFinder;

      @Autowired
      public void setMovieFinder(MovieFinder movieFinder) {
          this.movieFinder = movieFinder;
      }

      // ...

  }
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    @Autowired annotation can be applied to setter methods, constructors, methods with arbitrary names and/or multiple arguments, fields, etc.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;For more details, go to the link

&lt;a href=&#34;https://docs.spring.io/spring/docs/4.2.x/spring-framework-reference/html/beans.html#beans-annotation-config&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Annotation-based container configuration&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;java-based-javaconfig&#34;&gt;Java-based (JavaConfig)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;JavaConfig Overview&lt;/p&gt;
&lt;p&gt;Starting with Spring 3.0, many features provided by the Spring JavaConfig project became part of the core Spring Framework. Thus you can define beans external to your application  classes by using Java rather than XML files. To use these new features, see the @Configuration, @Bean, @Import and @DependsOn annotations.&lt;/p&gt;
&lt;p&gt;Java configuration typically uses @Bean annotated methods within a @Configuration class.&lt;/p&gt;
&lt;p&gt;Spring JavaConfig is a product of the Spring community that provides a pure-Java approach to configuring the Spring IoC Container. While JavaConfig aims to be a feature-complete     option for configuration, it can be (and often is) used in conjunction with the more well-known XML-based configuration approach.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@Bean Annotation&lt;/p&gt;
&lt;p&gt;The @Bean annotation is used to indicate that a method instantiates, configures and initializes a new object to be managed by the Spring IoC container. For those familiar with Spring’s &lt;beans/&gt; XML configuration the @Bean annotation plays the same role as the &lt;bean/&gt; element. You can use @Bean annotated methods with any Spring @Component, however, they are most often used with @Configuration beans.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@Configuration Annotation&lt;/p&gt;
&lt;p&gt;Annotating a class with @Configuration indicates that its primary purpose is as a source of bean definitions. Furthermore, @Configuration classes allow inter-bean dependencies to be defined by simply calling other @Bean methods in the same class. The simplest possible @Configuration class would read as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  @Configuration
  public class AppConfig {

      @Bean
      public MyService myService() {
          return new MyServiceImpl();
      }

  }
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more details, go to the link

&lt;a href=&#34;https://docs.spring.io/spring/docs/4.2.x/spring-framework-reference/html/beans.html#beans-java&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java-based container configuration&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;links&#34;&gt;Links&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://docs.spring.io/spring/docs/4.2.x/spring-framework-reference/html/beans.html#beans-definition&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring Core Technologies - beans definition&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://juejin.im/post/6844903618567471112&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;初识Spring —— Bean的装配（一）&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://juejin.im/post/6844903619834150919&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;初识Spring —— Bean的装配（二）&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://stackoverflow.com/questions/17193365/what-in-the-world-are-spring-beans&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;What in the world are Spring beans?&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://juejin.im/post/6844903813753602056&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring注入Bean的几种方式&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://docs.huihoo.com/spring/zh-cn/beans.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Beans, BeanFactory和ApplicationContext&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://www.journaldev.com/2461/spring-ioc-bean-example-tutorial&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring IoC and Bean&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://stackoverflow.com/questions/21163355/spring-context-and-bean-lifecycle-callbacks-practical-examples-of-usage&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring Context and Bean Lifecycle callbacks: practical examples of usage&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://stackoverflow.com/questions/25469369/what-do-you-mean-by-callbacks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;what do you mean by callbacks?&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://dzone.com/articles/spring-bean-lifecycle-using-spring-aware-interface&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring Bean Lifecycle: Using Spring Aware Interfaces&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://www.geeksforgeeks.org/bean-life-cycle-in-java-spring/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bean life cycle in Java Spring&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://en.wikipedia.org/wiki/Callback_%28computer_programming%29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Callback (computer programming)&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://howtodoinjava.com/spring-core/spring-bean-life-cycle/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring – Bean Life Cycle&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://dzone.com/articles/spring-bean-lifecycle&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring Bean Lifecycle&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Upgrade to VirtualBox 6.1 and Vagrant 2.9.9 on Ubuntu 18.04</title>
      <link>/linux/ubuntu-18.04-upgrade-virtualbox-vagrant/</link>
      <pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/linux/ubuntu-18.04-upgrade-virtualbox-vagrant/</guid>
      <description>&lt;p&gt;I needed to set up a development environment for this week&amp;rsquo;s IETF code sprint. As this was a very short term project, I would like to
set up the environment in a VM. Instead of downloading Linux image, install it on VirtualBox or KVM, Vagrant is handy to use, particularly
for development environment. I was thinking to get some new exeperience. Then CentOS 8 came up, as I have been using CentOS 7, but no
CentOS 8 experience. And also I wanted the environment with GUI, so that I dould test my code on the VM directly.&lt;/p&gt;
&lt;h3 id=&#34;why-to-upgrade-virtualbox-and-vagrant&#34;&gt;Why to upgrade VirtualBox and Vagrant&lt;/h3&gt;
&lt;p&gt;I had VirtualBox and Vagrant on my machine(Ubuntu 18.04). So it was straight forward to boot up CentOS 8 by changing the Vagrantfile.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# -*- mode: ruby -*-&lt;br&gt;
# vi: set ft=ruby :&lt;/p&gt;
&lt;p&gt;Vagrant.configure(&amp;ldquo;2&amp;rdquo;) do |config|&lt;br&gt;
     config.vm.box = &amp;ldquo;centos/8&amp;rdquo;&lt;br&gt;
     config.vm.box_check_update = false&lt;br&gt;
     config.vm.hostname = &amp;ldquo;centos8&amp;rdquo;&lt;br&gt;
     config.vm.provider &amp;ldquo;virtualbox&amp;rdquo; do |vb|&lt;br&gt;
     # Display the VirtualBox GUI when booting the machine&lt;br&gt;
           vb.gui = true&lt;br&gt;
           vb.memory = &amp;ldquo;4096&amp;rdquo;&lt;br&gt;
           vb.cpus = 4&lt;br&gt;
     end&lt;br&gt;
end&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;a href=&#34;./Vagrantfile&#34;&gt;Vagrantfile&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Vagrant up&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I could &lt;strong&gt;vagrant ssh&lt;/strong&gt; to the VM and there was terminal on VirtualBox console. Everything worked well until the GUI was installed and started.
I &lt;strong&gt;could not&lt;/strong&gt; get into the GUI of CentOS.&lt;br&gt;
I guessed to upgrade the VirtualBox might resolve the issue, because I had VirtualBox 5.2. The latest version of VirtualBox is 6.1. So I started upgrading VirutalBox.&lt;/p&gt;
&lt;h3 id=&#34;upgrade-virtualbox-61&#34;&gt;Upgrade VirtualBox 6.1&lt;/h3&gt;
&lt;p&gt;To install the latest version of VirtualBox, the usual way is to download the .DEB binary package simply from

&lt;a href=&#34;https://www.virtualbox.org/wiki/Linux_Downloads&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VirtualBox downloads page&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://download.virtualbox.org/virtualbox/6.1.12/virtualbox-6.1_6.1.12-139181~Ubuntu~bionic_amd64.deb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install the package by dpkg&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dpkg -i virtualbox-6.1_6.1.12-139181~Ubuntu~bionic_amd64.deb
sudo apt install -f
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or apt&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install ./virtualbox-6.1_6.1.12-139181~Ubuntu~bionic_amd64.deb
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;upgrade-vagrant-299&#34;&gt;Upgrade Vagrant 2.9.9&lt;/h3&gt;
&lt;p&gt;To support VirtualBox 6.1, I also have to upgrade Vagrant to 2.9.9. Again download the DEB package from  Vagrant release website and install with dpkg or apt.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -O https://releases.hashicorp.com/vagrant/2.2.9/vagrant_2.2.9_x86_64.deb
sudo apt install ./vagrant_2.2.9_x86_64.deb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To verify that the installation was successful, run the following command which prints the Vagrant version:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vagrant --version 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;install-virtualbox-dkms&#34;&gt;Install Virtualbox-dkms&lt;/h3&gt;
&lt;p&gt;When VirtualBox is upgraded, the old virtual machines might fail to open. Some error information like below:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Failed to open a session for the virtual machine xxxxxxx.&lt;/p&gt;
&lt;p&gt;The VM session was closed before any attempt to power it on.&lt;/p&gt;
&lt;p&gt;Result Code: NS_ERROR_FAILURE (0x80004005)&lt;br&gt;
Component: SessionMachine&lt;br&gt;
Interface: ISession {7844aa05-b02e-4cdd-a04f-ade4a762e6b7}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Even running the command &amp;lsquo;sudo /sbin/vboxconfig&amp;rsquo; can&amp;rsquo;t resolve the issue. the dkms package needs to be reinstalled.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dpkg -l | grep virtualbox-dkms
sudo apt-get purge virtualbox-dkms &amp;amp;&amp;amp; sudo apt-get install dkms
sudo /sbin/vboxconfig
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;install-virtualbox-extension-pack&#34;&gt;Install VirtualBox Extension Pack&lt;/h3&gt;
&lt;p&gt;After the Vagrant and VirtualBox had been upgraded, unfortunately I still couldn&amp;rsquo;t make the CentOS 8 GUI working, even though
I tried all the options of &amp;lsquo;Graphics Controller&amp;rsquo;. When I tried to connect the VM by RDP, I got an error message of no
VirtualBox Extension Pack. Here is the step to install the VirtualBox Extension Pack.&lt;/p&gt;
&lt;h4 id=&#34;step-1&#34;&gt;Step 1&lt;/h4&gt;
&lt;p&gt;Go to the 
&lt;a href=&#34;https://www.virtualbox.org/wiki/Downloads&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;virtualbox official website&lt;/a&gt; and download the package.&lt;/p&gt;
&lt;h4 id=&#34;step-2&#34;&gt;Step 2&lt;/h4&gt;
&lt;p&gt;Double click the file, such as&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Oracle_VM_VirtualBox_Extension_Pack-6.1.12&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;then follow the wizard to install.&lt;/p&gt;
&lt;p&gt;Unfortunately the RDP did not show me the desktop successfully either.&lt;/p&gt;
&lt;h3 id=&#34;install-vagrant-plugin-vagrant-libvirt&#34;&gt;Install Vagrant Plugin vagrant-libvirt&lt;/h3&gt;
&lt;p&gt;As I couldn&amp;rsquo;t make the CentOS 8 GUI working on VirtualBox with Vagrant, then I moved to Libvirt with Vagrant.
But When I did &amp;lsquo;vagrant up&amp;rsquo;, got the below error.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./libvirt-not-found.png&#34; alt=&#34;libvirt-not-found&#34;&gt;&lt;/p&gt;
&lt;p&gt;It seemed that the libvirt plugin was not installed, because I installed Vagrant by DEB package, not apt.
To install Vagrant Plugin vagrant-libvert, please follow the

&lt;a href=&#34;https://github.com/vagrant-libvirt/vagrant-libvirt#installation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Vagrant Libvirt Provider&lt;/a&gt;
on GitHub.&lt;/p&gt;
&lt;h4 id=&#34;step-1-1&#34;&gt;Step 1&lt;/h4&gt;
&lt;p&gt;The packages for building needs to be installed.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get build-dep vagrant ruby-libvirt  
apt-get install qemu libvirt-bin ebtables dnsmasq-base  
apt-get install libxslt-dev libxml2-dev libvirt-dev zlib1g-dev ruby-dev  
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;step-2-1&#34;&gt;Step 2&lt;/h4&gt;
&lt;p&gt;Install the plugin.
vagrant plugin install vagrant-libvirt&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./install-vagrant-libvirt.png&#34; alt=&#34;install-vagrant-libvirt&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;non-exist-box-error&#34;&gt;Non-exist Box Error&lt;/h3&gt;
&lt;p&gt;I even tried some pre-built box with GUI, but the box was gone when I used the new version Vagrant.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./nonexist-box.png&#34; alt=&#34;nonexist-box&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;terminal-mode&#34;&gt;Terminal Mode&lt;/h3&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    Bad news - I have not made the CentOS 8 GUI working on VM through Vagrant with either VirtualBox or Libvirt.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The pictures below show the successful terminal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./successful-vagrant-up.png&#34; alt=&#34;successful-vagrant-up&#34;&gt;
&lt;img src=&#34;./vagrant-ssh.png&#34; alt=&#34;vagrant-ssh&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    The username and password for console are vagrant and vagrant.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;./username-password-vagrant.png&#34; alt=&#34;username-password-vagrant&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;links&#34;&gt;Links&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://linuxize.com/post/how-to-install-vagrant-on-ubuntu-18-04/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to Install Vagrant on Ubuntu 18.04&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://www.golinuxcloud.com/install-gnome-enable-gui-mode-rhel-centos-8/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Install GNOME | How to enable GUI mode | RHEL CentOS 8&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://www.techrepublic.com/article/how-to-install-a-gui-on-top-of-centos-7/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to install a GUI on top of CentOS 7&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://computingforgeeks.com/run-centos-8-vm-using-vagrant-on-kvm-virtualbox-vmware-parallels/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Run CentOS 8 VM using Vagrant on KVM / VirtualBox / VMWare / Parallels&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h4 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 18.04 System Python 3 Upgrade</title>
      <link>/linux/ubuntu-18.04-system-python-3-upgrade/</link>
      <pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/linux/ubuntu-18.04-system-python-3-upgrade/</guid>
      <description>&lt;h3 id=&#34;symptom&#34;&gt;Symptom&lt;/h3&gt;
&lt;p&gt;After the upgrade from Python 3.6 to Python 3.8:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu Software Center not working&lt;/li&gt;
&lt;li&gt;Can&amp;rsquo;t start terminal by Ctl+Alt+t&lt;/li&gt;
&lt;li&gt;Can&amp;rsquo;t start terminal or software&lt;/li&gt;
&lt;li&gt;Error Message - A problem occured when checking for the updates&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;root-cause&#34;&gt;Root cause&lt;/h3&gt;
&lt;p&gt;After the Python 3 upgrade, I changed the Update-alternatives configuration. Fortunately I remembered it!&lt;/p&gt;
&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;
&lt;p&gt;Start terminal in right click menu and change back to the original configuration of update-alternatives, as below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./update-alternatives-config.png&#34; alt=&#34;update-alternatives-config&#34;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Java Beans</title>
      <link>/coding/java/javabeans/</link>
      <pubDate>Fri, 17 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/coding/java/javabeans/</guid>
      <description>&lt;h2 id=&#34;java-beans&#34;&gt;Java Beans&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Software Components&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;JavaBeans are classes that encapsulate many objects into a single object. They are serializable, have a zero-argument constructor, and allow access to properties using getter and setter methods.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;ul&gt;
&lt;li&gt;a Java classs&lt;/li&gt;
&lt;li&gt;serializable&lt;/li&gt;
&lt;li&gt;zero-argument constructor&lt;/li&gt;
&lt;li&gt;getter and setter&lt;/li&gt;
&lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A bean is a Java class with method names that follow the JavaBeans guidelines. A bean builder tool uses introspection to examine the bean class. Based on this inspection, the bean builder tool can figure out the bean&amp;rsquo;s properties, methods, and events.&lt;br&gt;
Almost any code can be packaged as a bean.&lt;br&gt;
The power of JavaBeans is that you can use software components without having to write them or understand their implementation.&lt;/p&gt;
&lt;h3 id=&#34;java-beans-example&#34;&gt;Java Beans Example&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;import java.io.Serializable;

public class Car implements Serializable {
    //Private Properties
    private String color;
    private Boolean isCar;

    //Zero-argument Constructor
    public Car(){}

    //Getter and Setter
    public void setColor(String color) { this.color = color; }
    
    public String getColor() { return color; }
    
    public void setCar(Boolean car) { isCar = car; }

    //&#39;is&#39; for Boolean getter
    public Boolean isCar() { return isCar; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;bean-properties&#34;&gt;Bean Properties&lt;/h3&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;ul&gt;
&lt;li&gt;Read and write property has getter and setter&lt;/li&gt;
&lt;li&gt;A read-only property has a getter method but no setter&lt;/li&gt;
&lt;li&gt;A write-only property has a setter method only&lt;/li&gt;
&lt;li&gt;Boolean property using is instead of get&lt;/li&gt;
&lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Indexed Properties&lt;br&gt;
an array instead of a single value&lt;/li&gt;
&lt;li&gt;Bound Properties&lt;br&gt;
PropertyChangeListeners&lt;/li&gt;
&lt;li&gt;Constrained Properties&lt;br&gt;
VetoableChangeListeners&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bean-methods&#34;&gt;Bean Methods&lt;/h3&gt;
&lt;p&gt;Any public method that is not part of a property definition is a bean method.&lt;/p&gt;
&lt;h3 id=&#34;bean-events&#34;&gt;Bean Events&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A bean class can fire off any type of event&lt;/li&gt;
&lt;li&gt;Method names with a specific pattern&lt;/li&gt;
&lt;li&gt;Can be used in wiring components together&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;beaninfo&#34;&gt;BeanInfo&lt;/h3&gt;
&lt;p&gt;A BeanInfo is a class that changes how your bean appears in a builder tool.&lt;/p&gt;
&lt;h3 id=&#34;bean-persistence&#34;&gt;Bean Persistence&lt;/h3&gt;
&lt;h4 id=&#34;serialization&#34;&gt;Serialization&lt;/h4&gt;
&lt;p&gt;A bean has the property of persistence when its properties, fields, and state information are saved to and retrieved from storage.&lt;br&gt;
All beans must persist. To persist, must implement either of below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;java.io.Serializable&lt;/li&gt;
&lt;li&gt;java.io.Externalizable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Any class is serializable as long as that class or a parent class implements the java.io.Serializable interface.&lt;br&gt;
Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Component&lt;/li&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;li&gt;Date&lt;/li&gt;
&lt;li&gt;Vector&lt;/li&gt;
&lt;li&gt;Hashtable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Not serializable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Image&lt;/li&gt;
&lt;li&gt;Thread&lt;/li&gt;
&lt;li&gt;Socket&lt;/li&gt;
&lt;li&gt;InputStream&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Controlling Serialization:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Automatic serialization&lt;/li&gt;
&lt;li&gt;Customized serialization&lt;/li&gt;
&lt;li&gt;Customized file format&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;long-term-persistence&#34;&gt;Long Term Persistence&lt;/h4&gt;
&lt;p&gt;Long-term persistence is a model that enables beans to be saved in XML format.&lt;/p&gt;
&lt;h3 id=&#34;links&#34;&gt;Links&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/JavaBeans&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JavaBeans&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;http://download.oracle.com/javase/tutorial/javabeans/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Oracle&amp;rsquo;s JavaBeans tutorials&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JavaBeans specification&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://juejin.im/post/6844903618567471112&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;初识Spring —— Bean的装配（一）&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Build A Free Website In Minutes - Part 4</title>
      <link>/post/build-a-free-website-in-minutes-part-4/</link>
      <pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/post/build-a-free-website-in-minutes-part-4/</guid>
      <description>&lt;p&gt;We have the website up and running in 
&lt;a href=&#34;https://flycoolman.com/post/build-a-free-website-in-minutes-part-3/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Part-3&lt;/a&gt;. If you have not completed that part, please do so before continuing this part.&lt;/p&gt;
&lt;h2 id=&#34;personalize-academic-website&#34;&gt;Personalize Academic website&lt;/h2&gt;
&lt;p&gt;This part will include the following sections:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Choose the right theme&lt;/li&gt;
&lt;li&gt;Set the site title&lt;/li&gt;
&lt;li&gt;Set the copyright&lt;/li&gt;
&lt;li&gt;Set the site icon&lt;/li&gt;
&lt;li&gt;Select the sections&lt;/li&gt;
&lt;li&gt;Set Google Analytics&lt;/li&gt;
&lt;li&gt;Configure the Menu&lt;/li&gt;
&lt;li&gt;Add dropdown menu&lt;/li&gt;
&lt;li&gt;Add your content&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;choose-the-right-theme&#34;&gt;Choose the right theme&lt;/h3&gt;
&lt;p&gt;Check out the 
&lt;a href=&#34;https://sourcethemes.com/academic/themes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;available themes&lt;/a&gt; and choose a design you love.
Set the configuration in file &amp;lsquo;site_root/config/_default/params.toml&amp;rsquo;. I leave the default as is.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;theme = &amp;quot;minimal&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Replace the &amp;lsquo;site_root&amp;rsquo; with your site root directory.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;set-the-site-title&#34;&gt;Set the site title&lt;/h3&gt;
&lt;p&gt;Set the title in file &amp;lsquo;site_root/config/_default/config.toml&amp;rsquo;. In my case, the &amp;lsquo;flycoolman&amp;rsquo; is used.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;title = &amp;quot;flycoolman&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;set-the-copyright&#34;&gt;Set the copyright&lt;/h3&gt;
&lt;p&gt;Set the copyright in file &amp;lsquo;site_root/config/_default/config.toml&amp;rsquo;, i.e.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;copyright = &amp;quot;&amp;amp;copy;{year}  flycoolman.com All Rights Reserved&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;set-the-site-icon&#34;&gt;Set the site icon&lt;/h3&gt;
&lt;p&gt;Save your icon image named icon.png and place the image in your root assets/images/ folder, creating the assets and images folders if they don’t already exist.&lt;/p&gt;
&lt;h3 id=&#34;select-the-sections&#34;&gt;Select the sections&lt;/h3&gt;
&lt;p&gt;All the sections of the demo home page in the folder &amp;lsquo;site_root/content/home&amp;rsquo;. See the picture below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./home-sections.png&#34; alt=&#34;home-sections&#34;&gt;&lt;/p&gt;
&lt;p&gt;There is a setting called &amp;lsquo;active&amp;rsquo; in each file/section, just set the value to &amp;lsquo;false&amp;rsquo;, if you don&amp;rsquo;t want it in your home page.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./section-active.png&#34; alt=&#34;section-active&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;set-google-analytics&#34;&gt;Set Google Analytics&lt;/h3&gt;
&lt;p&gt;Set the Google Analytics in file &amp;lsquo;site_root/config/_default/params.toml&amp;rsquo; with your Google Analytics Tracking ID.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;google_analytics = &amp;quot;UA-123456789-6&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    There are many parameters in the file &amp;lsquo;params.toml&amp;rsquo;, set the ones that you want. They are self-explained
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;configure-the-menu&#34;&gt;Configure the Menu&lt;/h3&gt;
&lt;p&gt;The Menu on Navigation bar can be configured by change the settings in file &amp;lsquo;site_root/config/_default/menus.toml&amp;rsquo;, i.e.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove current one  by deleting or commenting out the corresponding item&lt;/li&gt;
&lt;li&gt;Rename current one by changing the value of &amp;lsquo;name&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Add new one by adding additional part of &amp;lsquo;[[main]]&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Rearrange the order by changing the value of &amp;lsquo;weight&amp;rsquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;./configure-menu.png&#34; alt=&#34;configure-menu&#34;&gt;
&lt;img src=&#34;./menu-after-config.png&#34; alt=&#34;menu-after-config&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;add-dropdown-menu&#34;&gt;Add dropdown menu&lt;/h3&gt;
&lt;p&gt;To create a dropdown sub-menu, add identifier = &amp;ldquo;something&amp;rdquo; to the parent item and parent = &amp;ldquo;something&amp;rdquo; to the child item.
The pictures below show how to add dropdown menu in file &amp;lsquo;site_root/config/_default/menus.toml&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./dropdown-menu-settings.png&#34; alt=&#34;dropdwon-menu-settings&#34;&gt;
&lt;img src=&#34;./dropdown-menu-example.png&#34; alt=&#34;dropdwon-menu-example&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;add-your-content&#34;&gt;Add your content&lt;/h3&gt;
&lt;p&gt;Go to the folder &amp;lsquo;site_root/content/post/&amp;rsquo;, select one post as template, write your own post. Refer to the links below for markdown syntax.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;All set! Enjoy writing!&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;links&#34;&gt;Links&lt;/h3&gt;
&lt;h4 id=&#34;how-to-academic&#34;&gt;How-To Academic&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/get-started/&#34;&gt;https://sourcethemes.com/academic/docs/get-started/&lt;/a&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/docs/page-builder/&#34;&gt;https://sourcethemes.com/academic/docs/page-builder/&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;how-to-markdown&#34;&gt;How-To Markdown&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://guides.github.com/features/mastering-markdown/&#34;&gt;https://guides.github.com/features/mastering-markdown/&lt;/a&gt;
&lt;a href=&#34;https://www.markdownguide.org/basic-syntax/&#34;&gt;https://www.markdownguide.org/basic-syntax/&lt;/a&gt;
&lt;a href=&#34;https://simplpost.com/markdown.html&#34;&gt;https://simplpost.com/markdown.html&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;add-utterances-comment-engine&#34;&gt;Add Utterances Comment Engine&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://mscipio.github.io/post/utterances-comment-engine/&#34;&gt;https://mscipio.github.io/post/utterances-comment-engine/&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Build A Free Website In Minutes - Part 3</title>
      <link>/post/build-a-free-website-in-minutes-part-3/</link>
      <pubDate>Wed, 15 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/post/build-a-free-website-in-minutes-part-3/</guid>
      <description>&lt;p&gt;In 
&lt;a href=&#34;https://flycoolman.com/post/build-a-free-website-in-minutes-part-1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Part-1&lt;/a&gt; and 
&lt;a href=&#34;https://flycoolman.com/post/build-a-free-website-in-minutes-part-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Part-2&lt;/a&gt;
we introduced the basic knowledges of the tools to help understand how they work. From this part, we will focus on building our real website.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-git-on-ubuntu-18-04-quickstart&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Download and install Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download and install Hugo Extended Version&lt;br&gt;
Please follow the part of &amp;lsquo;Install Hugo Extended Version&amp;rsquo; in 
&lt;a href=&#34;https://flycoolman.com/post/build-a-free-website-in-minutes-part-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Part-2&lt;/a&gt; of this tutorial.&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2 id=&#34;github-repositories&#34;&gt;GitHub Repositories&lt;/h2&gt;
&lt;h3 id=&#34;github-pages-repository&#34;&gt;GitHub Pages Repository&lt;/h3&gt;
&lt;p&gt;Please follow the guide on 
&lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Pages&lt;/a&gt; to create the repository correctly.&lt;/p&gt;
&lt;h3 id=&#34;academic-kickstart-repository&#34;&gt;Academic-kickstart Repository&lt;/h3&gt;
&lt;p&gt;Go to the GitHub page of 
&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;academic-kickstart&lt;/a&gt; and fork the repository to your GitHub account. The pictures below show the source of academic-kickstart page and the forked repository in my account.&lt;/p&gt;
&lt;p&gt;Academic-kickstart source page
&lt;img src=&#34;./fork-academic-kickstart.png&#34; alt=&#34;before-forked&#34;&gt;&lt;/p&gt;
&lt;p&gt;The forked repository in my account
&lt;img src=&#34;./forked-academic-kickstart.png&#34; alt=&#34;after-forked&#34;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;local-environment&#34;&gt;Local Environment&lt;/h2&gt;
&lt;h3 id=&#34;step-1---git-clone-ltusernamegtgithubio-to-local&#34;&gt;Step 1 - git clone &amp;lt;username&amp;gt;.github.io to local&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/your-user-name/your-user-name.github.io.git
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-2---git-clone-academic-kickstart-to-local&#34;&gt;Step 2 - git clone academic-kickstart to local&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/your-user-name/academic-kickstart.git
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-3---initialize-the-theme&#34;&gt;Step 3 - Initialize the theme&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd academic-kickstart/
git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-4---set-base-url-in-configtoml&#34;&gt;Step 4 - Set base url in config.toml&lt;/h3&gt;
&lt;p&gt;In your config.toml file, set baseurl = &amp;ldquo;https://&amp;lt;USERNAME&amp;gt;.github.io/&amp;rdquo;, where &amp;lt;USERNAME&amp;gt; is your Github username. Stop Hugo if it’s running and delete the public directory if it exists (by typing &lt;strong&gt;rm -r public/&lt;/strong&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vi config.toml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The example for my site
&lt;img src=&#34;./base-url-in-config-toml.png&#34; alt=&#34;after-forked&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;step-5---add-githubio-repository-into-academic-kickstart&#34;&gt;Step 5 - Add .github.io repository into Academic-kickstart&lt;/h3&gt;
&lt;p&gt;Add .github.io repository as a submodule in a folder named &amp;lsquo;public&amp;rsquo;, replacing with your Github username.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd academic-kickstart/
git submodule add -f -b master https://github.com/your-user-name/your-user-name.github.io.git public
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-6---remove-initial-index-file&#34;&gt;Step 6 - Remove initial index file&lt;/h3&gt;
&lt;p&gt;Delete the &amp;lsquo;index.html&amp;rsquo; file in the folder of &amp;lsquo;public&amp;rsquo;, if there is one.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd public  
rm index.html
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-7---build-your-website&#34;&gt;Step 7 - Build your website&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd academic-kickstart/
hugo
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-8---deploy-to-github&#34;&gt;Step 8 - Deploy to GitHub&lt;/h3&gt;
&lt;p&gt;Add everything to your local git repository and push it up to your remote repository on GitHub.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd academic-kickstart/
cd public
git add .
git comment -m &amp;quot;Initial commit&amp;quot;
git push

cd academic-kickstart/
git add .
git comment -m &amp;quot;Initial commit&amp;quot;
git push    
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Whilst running the above commands you may be prompted for your GitHub username and password.&lt;/p&gt;
&lt;p&gt;Once uploading is finished, access https://&amp;lt;USERNAME&amp;gt;.github.io in your browser, substituting with your GitHub username.
You will see a page like below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./hello-academic.png&#34; alt=&#34;hello-academic&#34;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;build-academic-demo-like-site&#34;&gt;Build Academic Demo Like Site&lt;/h2&gt;
&lt;p&gt;To initialise your site with the demo content, copy the contents of the themes/academic/exampleSite/ folder to your website root folder, overwriting existing files if necessary. The exampleSite folder contains an example config file and content to help you get started.&lt;/p&gt;
&lt;h3 id=&#34;step-1---replace-the-content&#34;&gt;Step 1 - Replace the content&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd academic-kickstart/
cp -av themes/academic/exampleSite/* .
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-2---build-the-site&#34;&gt;Step 2 - Build the site&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd academic-kickstart/
hugo
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-3---deploy-to-github&#34;&gt;Step 3 - Deploy to GitHub&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd academic-kickstart/
cd public
git add .
git comment -m &amp;quot;Initial commit&amp;quot;
git push

cd academic-kickstart/
git add .
git comment -m &amp;quot;Initial commit&amp;quot;
git push
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once uploading is finished, refresh the page in your browser, the page shows like below picture.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./academic-demo-site.png&#34; alt=&#34;academic-demo-site&#34;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Up to now, we have an Academic demo-like website up and running. In next part, we will personalize the website.&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Build A Free Website In Minutes - Part 2</title>
      <link>/post/build-a-free-website-in-minutes-part-2/</link>
      <pubDate>Tue, 14 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/post/build-a-free-website-in-minutes-part-2/</guid>
      <description>&lt;p&gt;To learn more about prerequisites and tools, please check out the 
&lt;a href=&#34;https://flycoolman.com/post/build-a-free-website-in-minutes-part-1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Part-1&lt;/a&gt; of this series.&lt;/p&gt;
&lt;h2 id=&#34;hugo-theme&#34;&gt;Hugo Theme&lt;/h2&gt;
&lt;h3 id=&#34;step-1---create-a-new-site&#34;&gt;Step 1 - Create a new site&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;hugo new site hello-theme
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-2---download-the-ananke-theme&#34;&gt;Step 2 - Download the ananke theme&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;wget https://github.com/budparr/gohugo-theme-ananke/archive/master.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-3---extract-that-zip-file-to-get-a-gohugo-theme-ananke-master-directory&#34;&gt;Step 3 - Extract that .zip file to get a “gohugo-theme-ananke-master” directory&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;unzip master.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-4---rename-that-directory-to-ananke-and-move-it-into-the-themes-directory&#34;&gt;Step 4 - Rename that directory to “ananke”, and move it into the “themes/” directory&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;mv gohugo-theme-ananke-master/ ananke/
mv ananke/ themes/ananke
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-5---add-the-theme-to-the-site-configuration&#34;&gt;Step 5 - Add the theme to the site configuration&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;echo &#39;theme = &amp;quot;ananke&amp;quot;&#39; &amp;gt;&amp;gt; config.toml
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-6---add-some-content-and-change-the-header-of-the-post-to-say-draft-false&#34;&gt;Step 6 - Add some content and change the header of the post to say draft: false&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;hugo new posts/hello-hugo-theme-post.md
vi content/posts/hello-hugo-theme-post.md
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-7---check-the-result&#34;&gt;Step 7 - Check the result&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./hello-hugo-theme.png&#34; alt=&#34;hello-hugo-theme&#34;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;hugo-uninstall&#34;&gt;Hugo Uninstall&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Use the below command to remove the package of Hugo&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get remove --auto-remove hugo
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Reading package lists&amp;hellip; Done&lt;br&gt;
Building dependency tree&lt;br&gt;
Reading state information&amp;hellip; Done&lt;br&gt;
The following packages will be REMOVED:&lt;br&gt;
   hugo&lt;br&gt;
0 upgraded, 0 newly installed, 1 to remove and 0 not upgraded.&lt;br&gt;
After this operation, 44.5 MB disk space will be freed.&lt;br&gt;
Do you want to continue? [Y/n] y&lt;br&gt;
(Reading database &amp;hellip; 252044 files and directories currently installed.)&lt;br&gt;
Removing hugo (0.73.0) &amp;hellip;&lt;br&gt;
dpkg: warning: while removing hugo, directory &amp;lsquo;/usr/local/bin&amp;rsquo; not empty so not removed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    As Academic requires Hugo extended version, that&amp;rsquo;s the reason that the standard version is uninstalled.
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;h2 id=&#34;hello-academic&#34;&gt;Hello Academic&lt;/h2&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Academic is a site builder, it is a hugo site itself.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;install-hugo-extended-version&#34;&gt;Install Hugo Extended Version&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;wget https://github.com/gohugoio/hugo/releases/download/v0.73.0/hugo_extended_0.73.0_Linux-64bit.deb
sudo dpkg -i hugo_extended_0.73.0_Linux-64bit.deb 
hugo version
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output below shows the information of Hugo extended version.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hugo Static Site Generator v0.73.0-428907CC/extended linux/amd64 BuildDate: 2020-06-23T16:40:09Z&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;install-academic&#34;&gt;Install Academic&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/docs/install-locally/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;This linke&lt;/a&gt; provides the different ways to install Academic.
In this part, the 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/install-locally/#install-with-zip&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Install with ZIP&lt;/a&gt; way is used.&lt;/p&gt;
&lt;h4 id=&#34;step-1---download-and-extract-academic-kickstart&#34;&gt;Step 1 - Download and extract Academic Kickstart&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;wget https://github.com/sourcethemes/academic-kickstart/archive/master.zip
unzip master.zip
rm master.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;step-2---download-and-extract-the-academic-theme-files-from-the-hugo-academic-master-folder-to-the-themesacademic-folder-in-academic-kickstart&#34;&gt;Step 2 - Download and extract the Academic theme files from the hugo-academic-master folder to the themes/academic/ folder in Academic Kickstart&lt;/h4&gt;
&lt;p&gt;wget &lt;a href=&#34;https://github.com/gcushen/hugo-academic/archive/master.zip&#34;&gt;https://github.com/gcushen/hugo-academic/archive/master.zip&lt;/a&gt;
unzip master.zip
rm master.zip&lt;/p&gt;
&lt;h4 id=&#34;step-3---copy-the-hugo-academic-master-folder-to-the-themesacademic-folder-in-academic-kickstart&#34;&gt;Step 3 - Copy the hugo-academic-master folder to the themes/academic/ folder in Academic Kickstart&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;cp -r hugo-academic-master/* academic-kickstart-master/themes/academic/
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;step-4---check-the-result&#34;&gt;Step 4 - Check the result&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;cd academic-kickstart-master/
hugo server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./hello-academic.png&#34; alt=&#34;hello-academic&#34;&gt;&lt;/p&gt;
&lt;p&gt;In next part, we will install everything in GitHub.&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Build A Free Website In Minutes - Part 1</title>
      <link>/post/build-a-free-website-in-minutes-part-1/</link>
      <pubDate>Sat, 11 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/post/build-a-free-website-in-minutes-part-1/</guid>
      <description>&lt;p&gt;When I create this website, I find that there are no documents to walk me through each step from &amp;lsquo;Hello World&amp;rsquo; to deployment till customization. This makes me have the idea to create one and help others to understand the whole process. In this tutorial, we will use the tools &lt;strong&gt;GitHub Pages&lt;/strong&gt;, &lt;strong&gt;Hugo&lt;/strong&gt; and &lt;strong&gt;Academic&lt;/strong&gt;.&lt;br&gt;
This is the 
&lt;a href=&#34;https://flycoolman.com/post/build-a-free-website-in-minutes-part-1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Part-1&lt;/a&gt; of this series.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Before contiduing this tutorial, you should have the basic knowledge of the following items:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;li&gt;GitHub&lt;/li&gt;
&lt;li&gt;HTTP&lt;/li&gt;
&lt;li&gt;HTTPS&lt;/li&gt;
&lt;li&gt;DNS&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    If you are familiar with these and just want to build your website quickly, you can jump to &lt;a href=&#34;https://flycoolman.com/post/build-a-free-website-in-minutes-part-3/&#34;&gt;Part-3&lt;/a&gt;.
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;h2 id=&#34;tools&#34;&gt;Tools&lt;/h2&gt;
&lt;h3 id=&#34;github-pages&#34;&gt;GitHub Pages&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Pages&lt;/a&gt; is a static site hosting service that takes HTML, CSS, and JavaScript files straight from a repository on GitHub, optionally runs the files through a build process, and publishes a website.&lt;/p&gt;
&lt;h3 id=&#34;hugo&#34;&gt;Hugo&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; is a fast and modern static site generator written in Go.&lt;/p&gt;
&lt;h3 id=&#34;academic&#34;&gt;Academic&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://themes.gohugo.io/academic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic&lt;/a&gt; is a website builder for Hugo. Build &lt;em&gt;anything&lt;/em&gt; with widgets and personalize your site with themes, plugins, and language packs.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;how-to-use-the-tools&#34;&gt;How to Use the Tools&lt;/h2&gt;
&lt;p&gt;From the brief introduction above, you have known what the tools are. Basically we will use Hugo to generate the website, personalize it with Academic, and deploy it to GitHub Pages. Now let&amp;rsquo;s put hands on it. We will start from &amp;lsquo;Hello World&amp;rsquo;.&lt;/p&gt;
&lt;h3 id=&#34;hello-world-of-github-pages&#34;&gt;Hello World of GitHub Pages&lt;/h3&gt;
&lt;p&gt;Please follow the 
&lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Pages Hello World Guide&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;hello-world-of-hugo&#34;&gt;Hello World of Hugo&lt;/h3&gt;
&lt;p&gt;Hugo official site has 
&lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;a quick start on macOS&lt;/a&gt;. But it may not install the latest version of Hugo, like on Ubuntu 18.04, the Hugo version is quite old if installing by &lt;strong&gt;apt&lt;/strong&gt;. I will introduce the steps on Ubuntu 18.04 here.&lt;/p&gt;
&lt;h4 id=&#34;step-1---install&#34;&gt;Step 1 - Install&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;mkdir -p temp
cd temp/
wget https://github.com/gohugoio/hugo/releases/download/v0.73.0/hugo_0.73.0_Linux-64bit.deb
sudo dpkg -i hugo_0.73.0_Linux-64bit.deb
hugo version
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output like below&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hugo Static Site Generator v0.73.0-428907CC linux/amd64 BuildDate: 2020-06-23T16:30:43Z&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;step-2---new-site&#34;&gt;Step 2 - New Site&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo rm hugo_0.73.0_Linux-64bit.deb 
mkdir hugo-sites
cd hugo-sites/
hugo new site hello-world
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output like below&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Congratulations! Your new Hugo site is created in /home/hongwei/temp/hugo-sites/hello-world.&lt;/p&gt;
&lt;p&gt;Just a few more steps and you&amp;rsquo;re ready to go:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download a theme into the same-named folder.
Choose a theme from https://themes.gohugo.io/ or
create your own with the &amp;ldquo;hugo new theme &lt;THEMENAME&gt;&amp;rdquo; command.&lt;/li&gt;
&lt;li&gt;Perhaps you want to add some content. You can add single files
with &amp;ldquo;hugo new &lt;SECTIONNAME&gt;/&lt;FILENAME&gt;.&lt;FORMAT&gt;&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Start the built-in live server via &amp;ldquo;hugo server&amp;rdquo;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Visit https://gohugo.io/ for quickstart guide and full documentation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let&amp;rsquo;s see the structure of the directory&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd hello-world
tree
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output like below&lt;br&gt;
&lt;img src=&#34;./folder_structure.png&#34; alt=&#34;folder structure&#34;&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s check the result&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now go to http://127.0.0.1:1313, you get a blank page.&lt;/p&gt;
&lt;h4 id=&#34;step-3---hello-world&#34;&gt;Step 3 - Hello World&lt;/h4&gt;
&lt;p&gt;To ask the website to say &amp;lsquo;Hello World&amp;rsquo;, we need to add content and template.&lt;br&gt;
Add a file named &lt;strong&gt;_index.md&lt;/strong&gt; in the fold of &lt;strong&gt;content&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd content/
vi _index.md
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The file content&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;---&lt;br&gt;
title: Hello, World!&lt;br&gt;
description: |&lt;br&gt;
    My personal site.&lt;br&gt;
---&lt;/p&gt;
&lt;p&gt;Welcome to my personal site.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Add a html template file named &lt;strong&gt;index.html&lt;/strong&gt; in the fold of &lt;strong&gt;layouts&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ..
cd layouts/
vi index.html
cd ..  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To check the result&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you get the &amp;lsquo;Hello World&amp;rsquo; page.&lt;br&gt;
&lt;img src=&#34;./hugo-hello-world.png&#34; alt=&#34;hugo-hello-world&#34;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;To customize the website, we will discuss Hugo theme and Academic in 
&lt;a href=&#34;https://flycoolman.com/post/build-a-free-website-in-minutes-part-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Part-2&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>An example preprint / working paper</title>
      <link>/publication/preprint/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate>
      <guid>/publication/preprint/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example journal article</title>
      <link>/publication/journal-article/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      <guid>/publication/journal-article/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example conference paper</title>
      <link>/publication/conference-paper/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      <guid>/publication/conference-paper/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
